{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.styled.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.styled.js","Components/Section/Section.js","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.js","Components/Feedback/Feedback.js","Components/Notification/Notification.styled.js","Components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackBlock","styled","div","FeedbackButton","button","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","SectionBlock","section","SectionTitle","h2","Section","title","children","StatisticBlock","StatisticParagraph","p","Statistics","good","neutral","bad","total","positivePercentage","Object","freeze","GOOD","NEUTRAL","BAD","NotificationTitle","Notification","message","values","Feedback","App","state","handleFeedbackUpdate","e","feedbackOption","target","textContent","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"s6BAEO,IAAMA,EAAgBC,IAAOC,IAAV,KAIbC,EAAiBF,IAAOG,OAAV,KCeZC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,kBAACP,EAAD,KACGM,EAAQE,KAAI,SAAAC,GAAM,OACjB,kBAACN,EAAD,CAAgBO,IAAKD,EAAQE,KAAK,SAASC,QAASL,GACjDE,Q,4OCPJ,IAAMI,EAAeZ,IAAOa,QAAV,KAIZC,EAAed,IAAOe,GAAV,KCYVC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,kBAACN,EAAD,KACE,kBAACE,EAAD,KAAeG,GACdC,I,8OCNA,IAAMC,EAAiBnB,IAAOC,IAAV,KAIdmB,EAAqBpB,IAAOqB,EAAV,KCoBhBC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,kBAACR,EAAD,KACE,kBAACC,EAAD,cAA2BG,GAC3B,kBAACH,EAAD,iBAA8BI,GAC9B,kBAACJ,EAAD,aAA0BK,GAC1B,kBAACL,EAAD,eAA4BM,GAC5B,kBAACN,EAAD,2BACsBO,EADtB,OCXSC,SAAOC,OAAO,CAC3BC,KAAM,OACNC,QAAS,UACTC,IAAK,Q,mJCDP,IAOeC,EAPWjC,IAAOC,IAAV,KCURiC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,kBAAC,EAAD,KAAoBA,ICEvB9B,EAAUuB,OAAOQ,OAAOC,GAsDfC,E,4MApDbC,MAAQ,CAAEhB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCe,qBAAuB,SAAAC,GACrB,IAAMC,EAAiBD,EAAEE,OAAOC,YAChC,EAAKC,UAAS,SAAAN,GAAK,sBAChBG,EAAiBH,EAAMG,GAAkB,O,EAI9CI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MACpC,OAFyB,EACjBhB,KADiB,EACXC,QADW,EACFC,K,EAIzBsB,gCAAkC,WAAO,IAC/BxB,EAAS,EAAKgB,MAAdhB,KACFG,EAAQ,EAAKoB,qBACnB,OAAIpB,EACKsB,KAAKC,MAAc,IAAP1B,EAAcG,GAE5B,G,uDAEC,IAAD,EACwBwB,KAAKX,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAawB,KAAKJ,qBAClBnB,EAAqBuB,KAAKH,kCAChC,OACE,oCACE,kBAAC,EAAD,CAAS9B,MAAM,yBACb,kBAAC,EAAD,CACEZ,QAASA,EACTC,gBAAiB4C,KAAKV,wBAG1B,kBAAC,EAAD,CAASvB,MAAM,cACZM,GAAQC,GAAWC,EAClB,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcQ,QAAQ,4B,GA7ChBgB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ce1035c5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FeedbackBlock = styled.div`\r\n  padding: 20px 0 10px;\r\n`;\r\n\r\nexport const FeedbackButton = styled.button`\r\n  display: inline-block;\r\n  padding: 5px 15px;\r\n  font-size: 12px;\r\n  line-height: 1.2;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  background-color: blue;\r\n  border: 2px solid transparent;\r\n  border-radius: 20px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n\r\n  ::not(::last-child) {\r\n    margin-right: 15px;\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    color: blue;\r\n    background-color: #fff;\r\n    border: 2px solid blue;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FeedbackBlock, FeedbackButton } from \"./FeedbackOptions.styled\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackBlock>\r\n      {options.map(option => (\r\n        <FeedbackButton key={option} type=\"button\" onClick={onLeaveFeedback}>\r\n          {option}\r\n        </FeedbackButton>\r\n      ))}\r\n    </FeedbackBlock>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionBlock = styled.section`\r\n  padding: 10px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 30px;\r\n  line-height: 1.2;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SectionBlock, SectionTitle } from \"./Section.styled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionBlock>\r\n      <SectionTitle>{title}</SectionTitle>\r\n      {children}\r\n    </SectionBlock>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatisticBlock = styled.div`\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport const StatisticParagraph = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 1.4;\r\n  font-weight: 400;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticBlock, StatisticParagraph } from \"./Statistics.styled\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <StatisticBlock>\r\n      <StatisticParagraph>Good: {good}</StatisticParagraph>\r\n      <StatisticParagraph>Neutral: {neutral}</StatisticParagraph>\r\n      <StatisticParagraph>Bad: {bad}</StatisticParagraph>\r\n      <StatisticParagraph>Total: {total}</StatisticParagraph>\r\n      <StatisticParagraph>\r\n        Positive feedback: {positivePercentage}%\r\n      </StatisticParagraph>\r\n    </StatisticBlock>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","export default Object.freeze({\r\n  GOOD: \"good\",\r\n  NEUTRAL: \"neutral\",\r\n  BAD: \"bad\"\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nconst NotificationTitle = styled.div`\r\n  margin: 0;\r\n  font-size: 20px;\r\n  line-height: 2.2;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport default NotificationTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotificationTitle from \"./Notification.styled\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <NotificationTitle>{message}</NotificationTitle>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport Feedback from \"./Components/Feedback/Feedback\";\nimport Notification from \"./Components/Notification/Notification\";\n\nconst options = Object.values(Feedback);\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleFeedbackUpdate = e => {\n    const feedbackOption = e.target.textContent;\n    this.setState(state => ({\n      [feedbackOption]: state[feedbackOption] + 1\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    if (total) {\n      return Math.round((good * 100) / total);\n    }\n    return 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = 0 || this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedbackUpdate}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}